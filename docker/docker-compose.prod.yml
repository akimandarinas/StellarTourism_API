version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    ports:
      - "8000:80"
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: stellar_tourism
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      APP_URL: https://${DOMAIN}
      CORS_ALLOW_ORIGIN: https://${DOMAIN}
      APP_ENV: production
      JWT_SECRET: ${JWT_SECRET}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stellar_network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  db:
    image: mysql:8.0
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: stellar_tourism
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stellar_network
    deploy:
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: https://${DOMAIN}/api
        VITE_APP_URL: https://${DOMAIN}
        PUBLIC_API_URL: https://${DOMAIN}/api
        VUE_APP_VERSION: ${APP_VERSION}
        VITE_FIREBASE_API_KEY: ${FIREBASE_API_KEY}
        VITE_FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
        VITE_FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
        VITE_FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
        VITE_FIREBASE_APP_ID: ${FIREBASE_APP_ID}
        VITE_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - stellar_network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - client
      - api
    networks:
      - stellar_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  db_data:

networks:
  stellar_network:
    driver: overlay
