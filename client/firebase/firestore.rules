rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isPublic(resource) {
      return resource.data.isPublic == true;
    }
    
    // Reglas para la colección de usuarios
    match /usuarios/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Reglas para la colección de destinos
    match /destinos/{destinoId} {
      allow read: if true;
      allow write: if isAuthenticated() && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Reglas para la colección de naves
    match /naves/{naveId} {
      allow read: if true;
      allow write: if isAuthenticated() && get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Reglas para la colección de reservas
    match /reservas/{reservaId} {
      // Solo el propietario de la reserva puede leerla y escribirla
      allow read: if isAuthenticated() && (
        resource.data.usuarioId == request.auth.uid || 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin'
      );
      allow create: if isAuthenticated() && request.resource.data.usuarioId == request.auth.uid;
      allow update, delete: if isAuthenticated() && (
        resource.data.usuarioId == request.auth.uid || 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Reglas para la colección de reseñas
    match /resenas/{resenaId} {
      // Todos pueden leer reseñas, solo el autor puede escribirlas
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.usuarioId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.usuarioId == request.auth.uid;
    }
  }
}
